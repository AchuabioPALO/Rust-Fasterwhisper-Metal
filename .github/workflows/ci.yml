name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        rust: [stable, beta]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install Python (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install python@3.11
        pip3.11 install faster-whisper torch torchvision torchaudio
    
    - name: Install Python (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3.11 python3.11-pip python3.11-dev python3.11-venv
        python3.11 -m pip install --upgrade pip
        python3.11 -m pip install faster-whisper torch torchvision torchaudio
    
    - name: Setup Python Environment
      run: |
        chmod +x scripts/setup_python_env.sh
        ./scripts/setup_python_env.sh
        
    - name: Set PyO3 Environment (macOS)
      if: runner.os == 'macOS'
      run: |
        if [[ -f "/opt/homebrew/bin/python3.11" ]]; then
          echo "PYO3_PYTHON=/opt/homebrew/bin/python3.11" >> $GITHUB_ENV
        else
          echo "PYO3_PYTHON=/usr/local/bin/python3.11" >> $GITHUB_ENV
        fi
        
    - name: Set PyO3 Environment (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "PYO3_PYTHON=/usr/bin/python3.11" >> $GITHUB_ENV
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: |
        echo "Using Python at: $PYO3_PYTHON"
        cargo build --verbose
    
    - name: Run tests
      run: |
        echo "Using Python at: $PYO3_PYTHON"
        export KMP_DUPLICATE_LIB_OK=TRUE
        cargo test --verbose
    
    - name: Build release
      run: |
        echo "Using Python at: $PYO3_PYTHON"
        cargo build --release --verbose

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install cargo-audit
      run: cargo install cargo-audit
    - name: Run security audit
      run: cargo audit

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    
    - name: Install Python dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3.11 python3.11-pip python3.11-dev python3.11-venv
        python3.11 -m pip install --upgrade pip
        python3.11 -m pip install faster-whisper torch torchvision torchaudio
    
    - name: Setup Python Environment
      run: |
        chmod +x scripts/setup_python_env.sh
        ./scripts/setup_python_env.sh
        
    - name: Set PyO3 Environment
      run: |
        echo "PYO3_PYTHON=/usr/bin/python3.11" >> $GITHUB_ENV
    
    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov
    
    - name: Generate coverage
      run: |
        echo "Using Python at: $PYO3_PYTHON"
        export KMP_DUPLICATE_LIB_OK=TRUE
        cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info
        fail_ci_if_error: true
